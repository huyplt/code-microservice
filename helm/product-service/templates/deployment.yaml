apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "product-service.fullname" . }}
  labels:
    {{- include "product-service.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "product-service.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "product-service.selectorLabels" . | nindent 8 }}
      {{- /* Xử lý annotations cho Pod */}}
      {{- $gsaEmail := .Values.serviceAccount.gcpServiceAccountEmail | default .Values.global.podGcpServiceAccountEmail -}}
      {{- $podAnnotations := .Values.template.metadata.annotations | default dict -}}
      {{- if or $gsaEmail (not (empty $podAnnotations)) }}
      annotations:
        {{- if $gsaEmail }}
        iam.gke.io/gcp-service-account: {{ $gsaEmail }}
        {{- end }}
        {{- range $key, $value := $podAnnotations }}
        {{ $key }}: {{ $value | quote }}
        {{- end }}
      {{- end }}
    spec:
      {{- /* Xử lý serviceAccountName */}}
      {{- if .Values.serviceAccount.create }}
      serviceAccountName: {{ include "product-service.serviceAccountName" . }}
      {{- else if .Values.serviceAccount.name }}
      serviceAccountName: {{ .Values.serviceAccount.name }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Values.global.imageTag | default .Chart.AppVersion | default "latest" }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http # Đặt tên cho port
              containerPort: {{ .Values.service.targetPort | int }} # Đảm bảo là số
              protocol: TCP
          env:
            - name: PORT
              value: {{ .Values.service.targetPort | quote }}

            {{- $dbEnabled := include "product-service.util.drzew" (list .Values.database.enabled .Values.global.database.enabled true) -}}
            {{- if $dbEnabled }}
            - name: DB_HOST
              value: {{ .Values.database.host | default .Values.global.database.host | quote }}
            - name: DB_PORT
              value: {{ .Values.database.port | default .Values.global.database.port | quote }}
            - name: DB_USER
              value: {{ required "A DB user is required when database is enabled." (.Values.database.user | default .Values.global.database.user) | quote }}
            - name: DB_NAME
              value: {{ required "A DB name is required when database is enabled." .Values.database.dbName | quote }} # dbName thường là cục bộ
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ required "A DB password secret name is required." (.Values.database.passwordSecretName | default .Values.global.database.passwordSecretName) }}
                  key: {{ .Values.database.passwordSecretKey | default "password" }}
            {{- $cloudSqlProxyEnabled := include "product-service.util.drzew" (list .Values.cloudsqlproxy.enabled .Values.global.cloudsqlproxy.enabled true) -}}
            {{- if $cloudSqlProxyEnabled }}
            - name: DB_CONNECTION_NAME
              value: {{ required "A DB connection name is required for Cloud SQL Proxy." (.Values.database.connectionName | default .Values.global.database.connectionName) | quote }}
            {{- end }}
            {{- end }}

            {{- $rabbitmqEnabled := include "product-service.util.drzew" (list .Values.rabbitmq.enabled .Values.global.rabbitmq.enabled false) -}}
            {{- if $rabbitmqEnabled }}
            # ... (biến môi trường RabbitMQ tương tự, dùng default từ global) ...
            {{- end }}

          {{- if .Values.probes.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.probes.path }}
              port: {{ .Values.probes.portName | default "http" }} # Ưu tiên tên port
            initialDelaySeconds: {{ .Values.probes.liveness.initialDelaySeconds | default 15 }}
            periodSeconds: {{ .Values.probes.liveness.periodSeconds | default 20 }}
            # ... (các tham số probe khác)
          readinessProbe:
            httpGet:
              path: {{ .Values.probes.path }}
              port: {{ .Values.probes.portName | default "http" }}
            initialDelaySeconds: {{ .Values.probes.readiness.initialDelaySeconds | default 5 }}
            periodSeconds: {{ .Values.probes.readiness.periodSeconds | default 10 }}
            # ...
          {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}

        {{- $cloudSqlProxyEnabled := include "product-service.util.drzew" (list .Values.cloudsqlproxy.enabled .Values.global.cloudsqlproxy.enabled true) -}}
        {{- if and $dbEnabled $cloudSqlProxyEnabled }}
        - name: {{ .Values.cloudsqlproxy.proxyContainerName | default "cloud-sql-proxy" }}
          image: "{{ .Values.cloudsqlproxy.image | default .Values.global.cloudsqlproxy.image }}"
          imagePullPolicy: {{ .Values.image.pullPolicy | default "IfNotPresent" }}
          args:
            - "--structured-logs"
            - "--port={{ .Values.cloudsqlproxy.proxyPort | default .Values.global.cloudsqlproxy.proxyPort | default "5432" }}"
            - "{{ required "A DB connection name is required for Cloud SQL Proxy." (.Values.database.connectionName | default .Values.global.database.connectionName) }}"
          # securityContext: ...
          resources:
            {{- toYaml (.Values.cloudsqlproxy.resources | default dict) | nindent 12 }} # Cần default dict cho resources
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

